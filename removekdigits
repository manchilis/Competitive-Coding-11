//tc: O(n)
//sc:O(n)
//passed on leetcode: yes
class Solution {
    public String removeKdigits(String num, int k) {
        Stack<Character> st = new Stack<>();
        StringBuilder sb = new StringBuilder();
        int n= num.length();
        if (k>=n) return "0" ;
        for (int i=0; i<n; i++) {
            while (!st.isEmpty() && (st.peek() > num.charAt(i)) && k>0) {
                    st.pop();
                    k--;
            }
            st.push(num.charAt(i)); 
        }
        for (int j=0; j< k; j++) { // if it's an increasing ordereg: 112, 12345
            st.pop();
        }
        
        while(!st.isEmpty()) {
           sb.append(st.pop());
        }
        if (sb.length() == 0) return "0";
        sb.reverse();
        while (sb.length() > 1 && sb.charAt(0) == '0'){
            sb.deleteCharAt(0);
        }
        return sb.toString();
    }
}
